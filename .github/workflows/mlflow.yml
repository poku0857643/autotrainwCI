name: MLflow Training CI

on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
  schedule:
    - cron: "0 0 * * *"  # Runs daily at midnight UTC

jobs:
  train-and-log:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Set up Python
      uses: actions/setup-python@v5
      with:
        python-version: 3.11

    - name: Install dependencies
      run: |
        python -m pip install --upgrade pip
        pip install -r requirements.txt
        pip install mlflow pytest

    - name: Run Initial Training
      env:
        MLFLOW_TRACKING_URI: "https://08ee-36-230-63-22.ngrok-free.app"
      run: |
        echo "Starting initial training..."
        python train.py

    - name: Run Retraining Training
      env:
        MLFLOW_TRACKING_URI: "https://08ee-36-230-63-22.ngrok-free.app"
      run: |
        echo "Starting retraining process..."
        python automationretraining.py

    - name: Run Model Registry Update
      env:
        MLFLOW_TRACKING_URI: "https://08ee-36-230-63-22.ngrok-free.app"
      run: |
        echo "Updating model registry..."
        python automation_md_registry.py
        
    - name: Schedule Retraining Job
      env:
        MLFLOW_TRACKING_URI: "https://08ee-36-230-63-22.ngrok-free.app"
      run: |
        echo "Scheduling retraining job..."
        nohup python schedule_job.py &

    - name: Run Tests
      env:
        MLFLOW_TRACKING_URI: "https://08ee-36-230-63-22.ngrok-free.app"
      run: |
        echo "Running tests..."
        pytest test.py

  dockerize:
    runs-on: ubuntu-latest

    steps:
    - name: Checkout code
      uses: actions/checkout@v4

    - name: Build Docker Image
      run: |
        echo "Building Docker image..."
        docker build -t mlflow-train-retrain:latest .

    - name: Run Docker Container
      run: |
        echo "Running container for training..."
        docker run -d -e MLFLOW_TRACKING_URI="https://localhost:5001" mlflow-train-retrain:latest
